# coding: utf-8

from __future__ import absolute_import
from swagger_server.models.single_endpoint_configuration import SingleEndpointConfiguration
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class ServiceInformation(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, endpoints: List[SingleEndpointConfiguration]=None):
        """
        ServiceInformation - a model defined in Swagger

        :param endpoints: The endpoints of this ServiceInformation.
        :type endpoints: List[SingleEndpointConfiguration]
        """
        self.swagger_types = {
            'endpoints': List[SingleEndpointConfiguration]
        }

        self.attribute_map = {
            'endpoints': 'endpoints'
        }

        self._endpoints = endpoints

    @classmethod
    def from_dict(cls, dikt) -> 'ServiceInformation':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ServiceInformation of this ServiceInformation.
        :rtype: ServiceInformation
        """
        return deserialize_model(dikt, cls)

    @property
    def endpoints(self) -> List[SingleEndpointConfiguration]:
        """
        Gets the endpoints of this ServiceInformation.

        :return: The endpoints of this ServiceInformation.
        :rtype: List[SingleEndpointConfiguration]
        """
        return self._endpoints

    @endpoints.setter
    def endpoints(self, endpoints: List[SingleEndpointConfiguration]):
        """
        Sets the endpoints of this ServiceInformation.

        :param endpoints: The endpoints of this ServiceInformation.
        :type endpoints: List[SingleEndpointConfiguration]
        """
        if endpoints is None:
            raise ValueError("Invalid value for `endpoints`, must not be `None`")

        self._endpoints = endpoints

